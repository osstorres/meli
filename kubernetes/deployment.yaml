apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-app-django
  namespace: default
  labels:
      app: proxy-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy-app
  template:
    metadata:
      labels:
        app: proxy-app
    spec:
      containers:
      - name: proxy-app
        image: 00000000000.dkr.ecr.us-east-1.amazonaws.com/proxy-app:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /monitoring/health-check/
            port: 8000
        readinessProbe:
          httpGet:
            path: /monitoring/health-check/
            port: 8000
        envFrom:
        - secretRef:
            name: proxy-app-secret
        ports:
          - name: tcp
            containerPort: 8000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-app-celery
  namespace: default
  labels:
      app: proxy-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy-app
  template:
    metadata:
      labels:
        app: proxy-app
    spec:
      containers:
      - name: proxy-app
        image: 00000000000.dkr.ecr.us-east-1.amazonaws.com/proxy-app:latest
        imagePullPolicy: Always
        args: [ "celery", "-A", "proxy", "worker", "-l", "INFO" ]
        livenessProbe:
          httpGet:
            path: /monitoring/health-check/
            port: 8000
        readinessProbe:
          httpGet:
            path: /monitoring/health-check/
            port: 8000
        envFrom:
        - secretRef:
            name: proxy-app-secret
        ports:
          - name: tcp
            containerPort: 8000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---

apiVersion: v1
kind: Secret
metadata:
  name: proxy-app-secret
type: Opaque
