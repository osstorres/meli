name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region : us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR LAMBDA CONSUMER (SQS)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: consumer-lambda
          IMAGE_TAG: latest
        run: |
          cd lambda_consumer/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Build, tag, and push image to Amazon ECR LAMBDA FASTAPI (REST)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fastapi-lambda
          IMAGE_TAG: latest
        run: |
          cd api_stats/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push image to Amazon ECR PROXY APP (CORE)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: proxy-app
          IMAGE_TAG: latest
        run: |
          cd api_stats/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Check for Changes
        id: check_changes
        run: |
          TEMPLATE_CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'metrics-infra-cloudformation.yaml' || true)
          echo "::set-output name=template_changes::${TEMPLATE_CHANGES}"

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Stack1
          template: metrics-infra-cloudformation.yaml
          parameter-overrides: "LambdaFastApiImage=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/fastapi-lambda:latest,ConsumerLambdaImage=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/consumer-lambda:latest"
          capabilities: CAPABILITY_NAMED_IAM
        if: steps.check_changes.outputs.template_changes != ''

